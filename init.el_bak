(require 'package)
(setq org-use-property-inheritance nil)
(setq org-use-tag-inheritance nil)
(desktop-save-mode 1)
(setq desktop-path '("~" "~/.emacs.d/"))
(setq desktop-restore-eager 5)
;; You might already have this line
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
(not (gnutls-available-p))))
(url (concat (if no-ssl "http" "https") "://melpa.org/packages/")))
(add-to-list 'package-archives (cons "melpa" url) t))
(when (< emacs-major-version 24)
;; For important compatibility libraries like cl-lib
(add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
(add-to-list 'package-archives
'("melpa-stable" . "https://stable.melpa.org/packages/") t)
(package-initialize)
;; You might already have this line
(add-to-list 'load-path "~/.emacs.d/site-lisp/magit/lisp")
(with-eval-after-load 'info
(info-initialize)
(add-to-list 'Info-directory-list "~/.emacs.d/site-lisp/magit/Documentation/"))
(add-to-list 'load-path "/home/ben/mysrc/org-mode/lisp")
(add-to-list 'load-path "/home/ben/mysrc/org-mode/contrib/lisp")
(add-to-list 'Info-directory-list "/home/ben/mysrc/org-mode/doc")
;; (add-to-list 'Info-directory-list "/usr/share/doc/make") 
;; highlight-parentheses from MELPA
(require 'magit)
(require 'highlight-parentheses)
(setq hl-paren-colors '("azure" "green" "yellow" "violetred" "orange"))
(global-set-key "\C-xg" 'magit-status)
(global-set-key (kbd "C-?") 'help-command)
(global-set-key (kbd "M-?") 'mark-paragraph)
(global-set-key (kbd "C-h") 'delete-backward-char)
(global-set-key (kbd "M-h") 'backward-kill-word)
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-cb" 'org-iswitchb)
(setq org-insert-mode-line-in-empty-file t)
;; org's tags - overlap TAG:...
(setq org-tag-persistent-alist '((:startgroup . nil)
		      ("WANTED" . ?m)
		      ("Rerun" . ?r)
		      (:endgroup . nil)
		      ))
;;;; --- ---- -
;; (setq org-tag-alist '((:startgroup . nil)
;; 		      (:startgrouptag)
;; 		      ("WANTED" . ?m)
;; 		      ("LUFFY" . ?l)
;; 		      (:endgrouptag)
;; 		      ("soso" . ?s) ("Rerun" . ?r)
;; 		      (:endgroup . nil)
;; 		      ("Habitica". ?h)
;; 		      ("Caution" . ?y)
;; 		      ))
;; org's todo - agenda
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(org-agenda-files
   (quote
    ("~/filofex/afflux_fromAliECS.org" "/home/ben/filofex/tord.org")))
 '(org-id-link-to-org-use-id (quote create-if-interactive-and-no-custom-id))
 '(send-mail-function (quote mailclient-send-it)))
 ;; tord.org for todo, torch.org for notes...tarrow.org for journal(see below)
(setq org-default-notes-file "~/filofex/torch.org")
(setq org-todo-repeat-to-state "ReTodo")
;;(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
;; )
(setq server-name "foo")
(server-start)
;; habitrpg also known as habitica
;;(add-to-list 'load-path "/home/ben/mysrc/habitrpg.el")
;;(require 'habitrpg)
;;(setq habitrpg-api-user "582b4735-ac32-46fb-97f2-a47205897614")
;;(setq habitrpg-api-token "c6e3c988-8fb6-45c2-b05e-3aa6d406e3af")
;;(add-hook 'org-after-todo-state-change-hook 'habitrpg-add 'append)
;;(global-set-key (kbd "C-c C-x h") 'habitrpg-add)
;;(global-set-key (kbd "<f9> a") 'habitrpg-status)
;;(setq habitica-uid "582b4735-ac32-46fb-97f2-a47205897614")
;;(setq habitica-token "c6e3c988-8fb6-45c2-b05e-3aa6d406e3af")
;; forbidden upcase/lowcase regions
(put 'upcase-region 'disabled t)
(put 'downcase-region 'disabled t)
;; shanghai Sunrise/Sunset
(setq calendar-latitude 31.22)
(setq calendar-longitude 121.48)
(setq calendar-location-name "Shanghai, sh")
;; holi ... melpa installed cal-china-x
;;   cal-china-x        20170122.... installed             Chinese localization, lunar/horoscope/zodiac info and more...
(setq mark-holidays-in-calendar t)
;; from 1st OnePage to more envs, step by step, scope from scope
(setq org-todo-repeat-to-state "ReTodo")
(setq org-log-done 'time)
(setq org-log-repeat 'note)
;; tomopoto clock 25'
(setq org-timer-default-timer "25")
(setq org-agenda-skip-scheduled-if-deadline-is-shown 'repeated-after-deadline)
;; clock cross Emacs sessions
(setq org-clock-persist 't)
(org-clock-persistence-insinuate)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
;; capture-templates and prefix-keys
(setq org-capture-templates
      '(("g" "for convinient goto")
	("gt" "Todo" entry (file+headline "~/filofex/torch.org" "Tasks")
	 "* TODO %?\n  %U\n  %i\n  %a" :empty-lines 1)
	("gj" "Journal" entry (file+olp+datetree "~/filofex/tarrow.org")
	         "* %?\nEntered on %U\n  %i\n  %a" :empty-lines 1)))
(define-key global-map "\C-cx"
     (lambda () (interactive) (org-capture nil "gj")))
